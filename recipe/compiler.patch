diff --git a/modules/cctbx_project/libtbx/SConscript b/modules/cctbx_project/libtbx/SConscript
index 86adeaadb6..a5923a2f55 100644
--- a/modules/cctbx_project/libtbx/SConscript
+++ b/modules/cctbx_project/libtbx/SConscript
@@ -768,23 +768,25 @@ int main() {
       static_exe = None
   elif (env_etc.compiler == 'unix_conda' or env_etc.compiler == 'darwin_conda'):
     # get conda compilers from environment
-    cc = os.environ.get('CC', '')
-    cxx = os.environ.get('CXX', '')
-    if sys.platform.startswith("darwin"):
-      cc = os.environ.get('CLANG', '')
-      cxx = os.environ.get('CLANGXX', '')
-    validate = getattr(shutil, "which", os.path.isfile)
-    if not validate(cc) or not validate(cxx):
-      print("Compiler settings:")
-      print("  CC: ", cc)
-      print("  CXX:", cxx)
-      raise RuntimeError('conda compilers are not installed.')
+    # based on recommendation from conda-forge admins, just use CC and
+    # CXX from environment for linux and macOS. No checks are done since
+    # it is currently a full path on linux, but just a name on macOS
+    cc = os.environ.get('CC', None)
+    cxx = os.environ.get('CXX', None)

-    # use environment flags
+    if cc is not None or cxx is not None:
+      print("Compiler settings:")
+      if cc is not None:
+        print("  CC: ", cc)
+      if cxx is not None:
+        print("  CXX:", cxx)
+    if cc is None or cxx is None:
+      print("Warning: CC and/or CXX has not been set in the environment.")
+
+    # use environment flags if available
     if libtbx.env.build_options.use_environment_flags:
       env_etc.ccflags_base = []
       env_etc.cxxflags_base = []
-      libtbx.env.build_options.use_environment_flags = True
       env_etc.shlinkflags = ['-shared']
       env_etc.shlinkflags_bpl = env_etc.shlinkflags
       if sys.platform.startswith('darwin'):
@@ -822,15 +824,20 @@ int main() {
     env_etc.gcc_version = libtbx.env_config.get_gcc_version(command_name=cc)
     env_etc.cxx11_is_available = True

-    env_base.Replace(
-      CC=cc,
-      SHCC=cc,
-      CXX=cxx,
-      LINK=cxx,
-      SHCXX=cxx,
-      SHLINK=cxx,
-      SHLIBSUFFIX=env_etc.shlibsuffix,
-    )
+    if cc is not None:
+      env_base.Replace(
+        CC=cc,
+        SHCC=cc,
+      )
+    if cxx is not None:
+      env_base.Replace(
+        CXX=cxx,
+        LINK=cxx,
+        SHCXX=cxx,
+        SHLINK=cxx,
+      )
+    env_base.Replace(SHLIBSUFFIX=env_etc.shlibsuffix)
+
   elif env_etc.compiler.startswith("darwin"):
     cc  = env_etc.compiler.replace('darwin_','')
     if cc == "c++": cc = "cc"
